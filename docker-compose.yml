version: '3.2'

networks:
  my-network:
    driver: bridge

services:
# For M1 devices, use this service instead
#  Execute this command in terminal:
#  docker run -it -v `pwd`:/seed --network linked-site-api_my-network mcr.microsoft.com/mssql-tools
#
#  After access to docker container, run this command for seed data
#  sqlcmd -S db -U SA -P 'Acciona@1234' -d master -i seed/seed.sql

#  db:
#    container_name: db
#    image: mcr.microsoft.com/azure-sql-edge:latest
#    ports:
#      - '1433:1433'
#    cap_add:
#      - SYS_PTRACE
#    environment:
#      MSSQL_SA_PASSWORD: 'Acciona@1234'
#      ACCEPT_EULA: '1'
#    networks:
#      - my-network

  db:
    container_name: db
    image: sergeimatheson/mssql-server:latest
    ports:
      - '1433:1433'
    environment:
      SA_PASSWORD: 'Acciona@1234'
      ACCEPT_EULA: 'Y'
      DATABASE_SETUP_FILE: '/db-setup/seed.sql'
    volumes:
      - ./db:/db-setup
    networks:
      - my-network

  test:
    working_dir: /app
    build:
      context: .
      dockerfile: Dockerfile
    command: yarn test
    environment:
      TEST_DB_HOST: 'db'
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    networks:
      - my-network

  ci:
    working_dir: /app
    build:
      context: .
      dockerfile: Dockerfile
    command: yarn ci
    environment:
      TEST_DB_HOST: 'db'
      REDIS_HOST: 'redis:6379'
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    networks:
      - my-network

  redis:
    image: "redis:alpine"
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      - my-network
    restart: unless-stopped
